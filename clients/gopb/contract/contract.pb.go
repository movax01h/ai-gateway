// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.27.3
// source: contract/contract.proto

package gopb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ContextElementType int32

const (
	ContextElementType_USER_PREFERENCE   ContextElementType = 0
	ContextElementType_SELECTED_TEXT     ContextElementType = 1
	ContextElementType_FILE              ContextElementType = 2
	ContextElementType_ISSUE             ContextElementType = 3
	ContextElementType_MERGE_REQUEST     ContextElementType = 4
	ContextElementType_PREVIOUS_WORKFLOW ContextElementType = 5
)

// Enum value maps for ContextElementType.
var (
	ContextElementType_name = map[int32]string{
		0: "USER_PREFERENCE",
		1: "SELECTED_TEXT",
		2: "FILE",
		3: "ISSUE",
		4: "MERGE_REQUEST",
		5: "PREVIOUS_WORKFLOW",
	}
	ContextElementType_value = map[string]int32{
		"USER_PREFERENCE":   0,
		"SELECTED_TEXT":     1,
		"FILE":              2,
		"ISSUE":             3,
		"MERGE_REQUEST":     4,
		"PREVIOUS_WORKFLOW": 5,
	}
)

func (x ContextElementType) Enum() *ContextElementType {
	p := new(ContextElementType)
	*p = x
	return p
}

func (x ContextElementType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContextElementType) Descriptor() protoreflect.EnumDescriptor {
	return file_contract_contract_proto_enumTypes[0].Descriptor()
}

func (ContextElementType) Type() protoreflect.EnumType {
	return &file_contract_contract_proto_enumTypes[0]
}

func (x ContextElementType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ContextElementType.Descriptor instead.
func (ContextElementType) EnumDescriptor() ([]byte, []int) {
	return file_contract_contract_proto_rawDescGZIP(), []int{0}
}

type ClientEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*ClientEvent_StartRequest
	//	*ClientEvent_ActionResponse
	Response isClientEvent_Response `protobuf_oneof:"response"`
}

func (x *ClientEvent) Reset() {
	*x = ClientEvent{}
	mi := &file_contract_contract_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientEvent) ProtoMessage() {}

func (x *ClientEvent) ProtoReflect() protoreflect.Message {
	mi := &file_contract_contract_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientEvent.ProtoReflect.Descriptor instead.
func (*ClientEvent) Descriptor() ([]byte, []int) {
	return file_contract_contract_proto_rawDescGZIP(), []int{0}
}

func (m *ClientEvent) GetResponse() isClientEvent_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *ClientEvent) GetStartRequest() *StartWorkflowRequest {
	if x, ok := x.GetResponse().(*ClientEvent_StartRequest); ok {
		return x.StartRequest
	}
	return nil
}

func (x *ClientEvent) GetActionResponse() *ActionResponse {
	if x, ok := x.GetResponse().(*ClientEvent_ActionResponse); ok {
		return x.ActionResponse
	}
	return nil
}

type isClientEvent_Response interface {
	isClientEvent_Response()
}

type ClientEvent_StartRequest struct {
	StartRequest *StartWorkflowRequest `protobuf:"bytes,1,opt,name=startRequest,proto3,oneof"`
}

type ClientEvent_ActionResponse struct {
	ActionResponse *ActionResponse `protobuf:"bytes,2,opt,name=actionResponse,proto3,oneof"`
}

func (*ClientEvent_StartRequest) isClientEvent_Response() {}

func (*ClientEvent_ActionResponse) isClientEvent_Response() {}

type StartWorkflowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientVersion      string            `protobuf:"bytes,1,opt,name=clientVersion,proto3" json:"clientVersion,omitempty"`
	WorkflowID         string            `protobuf:"bytes,2,opt,name=workflowID,proto3" json:"workflowID,omitempty"`
	WorkflowDefinition string            `protobuf:"bytes,3,opt,name=workflowDefinition,proto3" json:"workflowDefinition,omitempty"`
	Goal               string            `protobuf:"bytes,4,opt,name=goal,proto3" json:"goal,omitempty"`
	WorkflowMetadata   string            `protobuf:"bytes,5,opt,name=workflowMetadata,proto3" json:"workflowMetadata,omitempty"`
	ClientCapabilities []string          `protobuf:"bytes,6,rep,name=clientCapabilities,proto3" json:"clientCapabilities,omitempty"`
	Context            []*ContextElement `protobuf:"bytes,7,rep,name=context,proto3" json:"context,omitempty"`
}

func (x *StartWorkflowRequest) Reset() {
	*x = StartWorkflowRequest{}
	mi := &file_contract_contract_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartWorkflowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartWorkflowRequest) ProtoMessage() {}

func (x *StartWorkflowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contract_contract_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartWorkflowRequest.ProtoReflect.Descriptor instead.
func (*StartWorkflowRequest) Descriptor() ([]byte, []int) {
	return file_contract_contract_proto_rawDescGZIP(), []int{1}
}

func (x *StartWorkflowRequest) GetClientVersion() string {
	if x != nil {
		return x.ClientVersion
	}
	return ""
}

func (x *StartWorkflowRequest) GetWorkflowID() string {
	if x != nil {
		return x.WorkflowID
	}
	return ""
}

func (x *StartWorkflowRequest) GetWorkflowDefinition() string {
	if x != nil {
		return x.WorkflowDefinition
	}
	return ""
}

func (x *StartWorkflowRequest) GetGoal() string {
	if x != nil {
		return x.Goal
	}
	return ""
}

func (x *StartWorkflowRequest) GetWorkflowMetadata() string {
	if x != nil {
		return x.WorkflowMetadata
	}
	return ""
}

func (x *StartWorkflowRequest) GetClientCapabilities() []string {
	if x != nil {
		return x.ClientCapabilities
	}
	return nil
}

func (x *StartWorkflowRequest) GetContext() []*ContextElement {
	if x != nil {
		return x.Context
	}
	return nil
}

type ActionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestID string `protobuf:"bytes,1,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Response  string `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *ActionResponse) Reset() {
	*x = ActionResponse{}
	mi := &file_contract_contract_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionResponse) ProtoMessage() {}

func (x *ActionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contract_contract_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionResponse.ProtoReflect.Descriptor instead.
func (*ActionResponse) Descriptor() ([]byte, []int) {
	return file_contract_contract_proto_rawDescGZIP(), []int{2}
}

func (x *ActionResponse) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *ActionResponse) GetResponse() string {
	if x != nil {
		return x.Response
	}
	return ""
}

type Action struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestID string `protobuf:"bytes,1,opt,name=requestID,proto3" json:"requestID,omitempty"`
	// Types that are assignable to Action:
	//
	//	*Action_RunCommand
	//	*Action_RunHTTPRequest
	//	*Action_RunReadFile
	//	*Action_RunWriteFile
	//	*Action_RunGitCommand
	//	*Action_RunEditFile
	//	*Action_NewCheckpoint
	Action isAction_Action `protobuf_oneof:"action"`
}

func (x *Action) Reset() {
	*x = Action{}
	mi := &file_contract_contract_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Action) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action) ProtoMessage() {}

func (x *Action) ProtoReflect() protoreflect.Message {
	mi := &file_contract_contract_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action.ProtoReflect.Descriptor instead.
func (*Action) Descriptor() ([]byte, []int) {
	return file_contract_contract_proto_rawDescGZIP(), []int{3}
}

func (x *Action) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (m *Action) GetAction() isAction_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (x *Action) GetRunCommand() *RunCommandAction {
	if x, ok := x.GetAction().(*Action_RunCommand); ok {
		return x.RunCommand
	}
	return nil
}

func (x *Action) GetRunHTTPRequest() *RunHTTPRequest {
	if x, ok := x.GetAction().(*Action_RunHTTPRequest); ok {
		return x.RunHTTPRequest
	}
	return nil
}

func (x *Action) GetRunReadFile() *ReadFile {
	if x, ok := x.GetAction().(*Action_RunReadFile); ok {
		return x.RunReadFile
	}
	return nil
}

func (x *Action) GetRunWriteFile() *WriteFile {
	if x, ok := x.GetAction().(*Action_RunWriteFile); ok {
		return x.RunWriteFile
	}
	return nil
}

func (x *Action) GetRunGitCommand() *RunGitCommand {
	if x, ok := x.GetAction().(*Action_RunGitCommand); ok {
		return x.RunGitCommand
	}
	return nil
}

func (x *Action) GetRunEditFile() *EditFile {
	if x, ok := x.GetAction().(*Action_RunEditFile); ok {
		return x.RunEditFile
	}
	return nil
}

func (x *Action) GetNewCheckpoint() *NewCheckpoint {
	if x, ok := x.GetAction().(*Action_NewCheckpoint); ok {
		return x.NewCheckpoint
	}
	return nil
}

type isAction_Action interface {
	isAction_Action()
}

type Action_RunCommand struct {
	RunCommand *RunCommandAction `protobuf:"bytes,2,opt,name=runCommand,proto3,oneof"`
}

type Action_RunHTTPRequest struct {
	RunHTTPRequest *RunHTTPRequest `protobuf:"bytes,3,opt,name=runHTTPRequest,proto3,oneof"`
}

type Action_RunReadFile struct {
	RunReadFile *ReadFile `protobuf:"bytes,4,opt,name=runReadFile,proto3,oneof"`
}

type Action_RunWriteFile struct {
	RunWriteFile *WriteFile `protobuf:"bytes,5,opt,name=runWriteFile,proto3,oneof"`
}

type Action_RunGitCommand struct {
	RunGitCommand *RunGitCommand `protobuf:"bytes,6,opt,name=runGitCommand,proto3,oneof"`
}

type Action_RunEditFile struct {
	RunEditFile *EditFile `protobuf:"bytes,7,opt,name=runEditFile,proto3,oneof"`
}

type Action_NewCheckpoint struct {
	NewCheckpoint *NewCheckpoint `protobuf:"bytes,8,opt,name=newCheckpoint,proto3,oneof"`
}

func (*Action_RunCommand) isAction_Action() {}

func (*Action_RunHTTPRequest) isAction_Action() {}

func (*Action_RunReadFile) isAction_Action() {}

func (*Action_RunWriteFile) isAction_Action() {}

func (*Action_RunGitCommand) isAction_Action() {}

func (*Action_RunEditFile) isAction_Action() {}

func (*Action_NewCheckpoint) isAction_Action() {}

type RunCommandAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Program   string   `protobuf:"bytes,3,opt,name=program,proto3" json:"program,omitempty"`
	Arguments []string `protobuf:"bytes,4,rep,name=arguments,proto3" json:"arguments,omitempty"`
	Flags     []string `protobuf:"bytes,5,rep,name=flags,proto3" json:"flags,omitempty"`
}

func (x *RunCommandAction) Reset() {
	*x = RunCommandAction{}
	mi := &file_contract_contract_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunCommandAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunCommandAction) ProtoMessage() {}

func (x *RunCommandAction) ProtoReflect() protoreflect.Message {
	mi := &file_contract_contract_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunCommandAction.ProtoReflect.Descriptor instead.
func (*RunCommandAction) Descriptor() ([]byte, []int) {
	return file_contract_contract_proto_rawDescGZIP(), []int{4}
}

func (x *RunCommandAction) GetProgram() string {
	if x != nil {
		return x.Program
	}
	return ""
}

func (x *RunCommandAction) GetArguments() []string {
	if x != nil {
		return x.Arguments
	}
	return nil
}

func (x *RunCommandAction) GetFlags() []string {
	if x != nil {
		return x.Flags
	}
	return nil
}

type ReadFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filepath string `protobuf:"bytes,1,opt,name=filepath,proto3" json:"filepath,omitempty"`
}

func (x *ReadFile) Reset() {
	*x = ReadFile{}
	mi := &file_contract_contract_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadFile) ProtoMessage() {}

func (x *ReadFile) ProtoReflect() protoreflect.Message {
	mi := &file_contract_contract_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadFile.ProtoReflect.Descriptor instead.
func (*ReadFile) Descriptor() ([]byte, []int) {
	return file_contract_contract_proto_rawDescGZIP(), []int{5}
}

func (x *ReadFile) GetFilepath() string {
	if x != nil {
		return x.Filepath
	}
	return ""
}

type WriteFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filepath string `protobuf:"bytes,1,opt,name=filepath,proto3" json:"filepath,omitempty"`
	Contents string `protobuf:"bytes,2,opt,name=contents,proto3" json:"contents,omitempty"`
}

func (x *WriteFile) Reset() {
	*x = WriteFile{}
	mi := &file_contract_contract_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteFile) ProtoMessage() {}

func (x *WriteFile) ProtoReflect() protoreflect.Message {
	mi := &file_contract_contract_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteFile.ProtoReflect.Descriptor instead.
func (*WriteFile) Descriptor() ([]byte, []int) {
	return file_contract_contract_proto_rawDescGZIP(), []int{6}
}

func (x *WriteFile) GetFilepath() string {
	if x != nil {
		return x.Filepath
	}
	return ""
}

func (x *WriteFile) GetContents() string {
	if x != nil {
		return x.Contents
	}
	return ""
}

type EditFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filepath  string `protobuf:"bytes,1,opt,name=filepath,proto3" json:"filepath,omitempty"`
	OldString string `protobuf:"bytes,2,opt,name=oldString,proto3" json:"oldString,omitempty"`
	NewString string `protobuf:"bytes,3,opt,name=newString,proto3" json:"newString,omitempty"`
}

func (x *EditFile) Reset() {
	*x = EditFile{}
	mi := &file_contract_contract_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EditFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditFile) ProtoMessage() {}

func (x *EditFile) ProtoReflect() protoreflect.Message {
	mi := &file_contract_contract_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditFile.ProtoReflect.Descriptor instead.
func (*EditFile) Descriptor() ([]byte, []int) {
	return file_contract_contract_proto_rawDescGZIP(), []int{7}
}

func (x *EditFile) GetFilepath() string {
	if x != nil {
		return x.Filepath
	}
	return ""
}

func (x *EditFile) GetOldString() string {
	if x != nil {
		return x.OldString
	}
	return ""
}

func (x *EditFile) GetNewString() string {
	if x != nil {
		return x.NewString
	}
	return ""
}

type RunHTTPRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Method string  `protobuf:"bytes,1,opt,name=method,proto3" json:"method,omitempty"`
	Path   string  `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Body   *string `protobuf:"bytes,3,opt,name=body,proto3,oneof" json:"body,omitempty"`
}

func (x *RunHTTPRequest) Reset() {
	*x = RunHTTPRequest{}
	mi := &file_contract_contract_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunHTTPRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunHTTPRequest) ProtoMessage() {}

func (x *RunHTTPRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contract_contract_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunHTTPRequest.ProtoReflect.Descriptor instead.
func (*RunHTTPRequest) Descriptor() ([]byte, []int) {
	return file_contract_contract_proto_rawDescGZIP(), []int{8}
}

func (x *RunHTTPRequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *RunHTTPRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *RunHTTPRequest) GetBody() string {
	if x != nil && x.Body != nil {
		return *x.Body
	}
	return ""
}

type RunGitCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Command       string  `protobuf:"bytes,1,opt,name=command,proto3" json:"command,omitempty"`
	Arguments     *string `protobuf:"bytes,2,opt,name=arguments,proto3,oneof" json:"arguments,omitempty"`
	RepositoryUrl string  `protobuf:"bytes,3,opt,name=repository_url,json=repositoryUrl,proto3" json:"repository_url,omitempty"`
}

func (x *RunGitCommand) Reset() {
	*x = RunGitCommand{}
	mi := &file_contract_contract_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunGitCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunGitCommand) ProtoMessage() {}

func (x *RunGitCommand) ProtoReflect() protoreflect.Message {
	mi := &file_contract_contract_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunGitCommand.ProtoReflect.Descriptor instead.
func (*RunGitCommand) Descriptor() ([]byte, []int) {
	return file_contract_contract_proto_rawDescGZIP(), []int{9}
}

func (x *RunGitCommand) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *RunGitCommand) GetArguments() string {
	if x != nil && x.Arguments != nil {
		return *x.Arguments
	}
	return ""
}

func (x *RunGitCommand) GetRepositoryUrl() string {
	if x != nil {
		return x.RepositoryUrl
	}
	return ""
}

type GenerateTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GenerateTokenRequest) Reset() {
	*x = GenerateTokenRequest{}
	mi := &file_contract_contract_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateTokenRequest) ProtoMessage() {}

func (x *GenerateTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contract_contract_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateTokenRequest.ProtoReflect.Descriptor instead.
func (*GenerateTokenRequest) Descriptor() ([]byte, []int) {
	return file_contract_contract_proto_rawDescGZIP(), []int{10}
}

type GenerateTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token     string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	ExpiresAt int64  `protobuf:"varint,2,opt,name=expiresAt,proto3" json:"expiresAt,omitempty"`
}

func (x *GenerateTokenResponse) Reset() {
	*x = GenerateTokenResponse{}
	mi := &file_contract_contract_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateTokenResponse) ProtoMessage() {}

func (x *GenerateTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contract_contract_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateTokenResponse.ProtoReflect.Descriptor instead.
func (*GenerateTokenResponse) Descriptor() ([]byte, []int) {
	return file_contract_contract_proto_rawDescGZIP(), []int{11}
}

func (x *GenerateTokenResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *GenerateTokenResponse) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

type ContextElement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     ContextElementType `protobuf:"varint,1,opt,name=type,proto3,enum=ContextElementType" json:"type,omitempty"`
	Name     string             `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Contents string             `protobuf:"bytes,3,opt,name=contents,proto3" json:"contents,omitempty"`
}

func (x *ContextElement) Reset() {
	*x = ContextElement{}
	mi := &file_contract_contract_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContextElement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContextElement) ProtoMessage() {}

func (x *ContextElement) ProtoReflect() protoreflect.Message {
	mi := &file_contract_contract_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContextElement.ProtoReflect.Descriptor instead.
func (*ContextElement) Descriptor() ([]byte, []int) {
	return file_contract_contract_proto_rawDescGZIP(), []int{12}
}

func (x *ContextElement) GetType() ContextElementType {
	if x != nil {
		return x.Type
	}
	return ContextElementType_USER_PREFERENCE
}

func (x *ContextElement) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ContextElement) GetContents() string {
	if x != nil {
		return x.Contents
	}
	return ""
}

type NewCheckpoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status     string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Checkpoint string   `protobuf:"bytes,2,opt,name=checkpoint,proto3" json:"checkpoint,omitempty"`
	Goal       string   `protobuf:"bytes,3,opt,name=goal,proto3" json:"goal,omitempty"`
	Errors     []string `protobuf:"bytes,4,rep,name=errors,proto3" json:"errors,omitempty"`
}

func (x *NewCheckpoint) Reset() {
	*x = NewCheckpoint{}
	mi := &file_contract_contract_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewCheckpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewCheckpoint) ProtoMessage() {}

func (x *NewCheckpoint) ProtoReflect() protoreflect.Message {
	mi := &file_contract_contract_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewCheckpoint.ProtoReflect.Descriptor instead.
func (*NewCheckpoint) Descriptor() ([]byte, []int) {
	return file_contract_contract_proto_rawDescGZIP(), []int{13}
}

func (x *NewCheckpoint) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *NewCheckpoint) GetCheckpoint() string {
	if x != nil {
		return x.Checkpoint
	}
	return ""
}

func (x *NewCheckpoint) GetGoal() string {
	if x != nil {
		return x.Goal
	}
	return ""
}

func (x *NewCheckpoint) GetErrors() []string {
	if x != nil {
		return x.Errors
	}
	return nil
}

var File_contract_contract_proto protoreflect.FileDescriptor

var file_contract_contract_proto_rawDesc = []byte{
	0x0a, 0x17, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x91, 0x01, 0x0a, 0x0b, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x0c, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x72, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48,
	0x00, 0x52, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa7, 0x02,
	0x0a, 0x14, 0x53, 0x74, 0x61, 0x72, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a,
	0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x44, 0x12, 0x2e, 0x0a, 0x12,
	0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x67, 0x6f, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x67, 0x6f, 0x61, 0x6c,
	0x12, 0x2a, 0x0a, 0x10, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x77, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x2e, 0x0a, 0x12,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x12, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0x4a, 0x0a, 0x0e, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0xa0, 0x03, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c,
	0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x33, 0x0a, 0x0a,
	0x72, 0x75, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x52, 0x75, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0a, 0x72, 0x75, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x12, 0x39, 0x0a, 0x0e, 0x72, 0x75, 0x6e, 0x48, 0x54, 0x54, 0x50, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x52, 0x75, 0x6e, 0x48,
	0x54, 0x54, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x72, 0x75,
	0x6e, 0x48, 0x54, 0x54, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x0b,
	0x72, 0x75, 0x6e, 0x52, 0x65, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x0b,
	0x72, 0x75, 0x6e, 0x52, 0x65, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x30, 0x0a, 0x0c, 0x72,
	0x75, 0x6e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x48, 0x00, 0x52,
	0x0c, 0x72, 0x75, 0x6e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x36, 0x0a,
	0x0d, 0x72, 0x75, 0x6e, 0x47, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x52, 0x75, 0x6e, 0x47, 0x69, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x0d, 0x72, 0x75, 0x6e, 0x47, 0x69, 0x74, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x2d, 0x0a, 0x0b, 0x72, 0x75, 0x6e, 0x45, 0x64, 0x69, 0x74,
	0x46, 0x69, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x45, 0x64, 0x69,
	0x74, 0x46, 0x69, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x72, 0x75, 0x6e, 0x45, 0x64, 0x69, 0x74,
	0x46, 0x69, 0x6c, 0x65, 0x12, 0x36, 0x0a, 0x0d, 0x6e, 0x65, 0x77, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x4e, 0x65,
	0x77, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x6e,
	0x65, 0x77, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x42, 0x08, 0x0a, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x89, 0x01, 0x0a, 0x10, 0x52, 0x75, 0x6e, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x70,
	0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72,
	0x6f, 0x67, 0x72, 0x61, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x4a, 0x04, 0x08, 0x01, 0x10, 0x02, 0x4a,
	0x04, 0x08, 0x02, 0x10, 0x03, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x12,
	0x77, 0x69, 0x74, 0x68, 0x47, 0x69, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x73, 0x22, 0x26, 0x0a, 0x08, 0x52, 0x65, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x70, 0x61, 0x74, 0x68, 0x22, 0x43, 0x0a, 0x09, 0x57, 0x72,
	0x69, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x70,
	0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x22,
	0x62, 0x0a, 0x08, 0x45, 0x64, 0x69, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x6c, 0x64, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x6c, 0x64, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x65, 0x77, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65, 0x77, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x22, 0x5e, 0x0a, 0x0e, 0x52, 0x75, 0x6e, 0x48, 0x54, 0x54, 0x50, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x12, 0x17, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x62,
	0x6f, 0x64, 0x79, 0x22, 0x81, 0x01, 0x0a, 0x0d, 0x52, 0x75, 0x6e, 0x47, 0x69, 0x74, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12,
	0x21, 0x0a, 0x09, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x88,
	0x01, 0x01, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x55, 0x72, 0x6c, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x61, 0x72,
	0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x16, 0x0a, 0x14, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x4b, 0x0a, 0x15, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1c,
	0x0a, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x22, 0x69, 0x0a, 0x0e,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x27,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x73, 0x0a, 0x0d, 0x4e, 0x65, 0x77, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x67, 0x6f, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x67, 0x6f, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2a, 0x7b, 0x0a, 0x12,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x52, 0x45, 0x46, 0x45,
	0x52, 0x45, 0x4e, 0x43, 0x45, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x45, 0x4c, 0x45, 0x43,
	0x54, 0x45, 0x44, 0x5f, 0x54, 0x45, 0x58, 0x54, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x49,
	0x4c, 0x45, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x49, 0x53, 0x53, 0x55, 0x45, 0x10, 0x03, 0x12,
	0x11, 0x0a, 0x0d, 0x4d, 0x45, 0x52, 0x47, 0x45, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54,
	0x10, 0x04, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x52, 0x45, 0x56, 0x49, 0x4f, 0x55, 0x53, 0x5f, 0x57,
	0x4f, 0x52, 0x4b, 0x46, 0x4c, 0x4f, 0x57, 0x10, 0x05, 0x32, 0x7b, 0x0a, 0x0b, 0x44, 0x75, 0x6f,
	0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x12, 0x2c, 0x0a, 0x0f, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x12, 0x0c, 0x2e, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0x07, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x28, 0x01, 0x30, 0x01, 0x12, 0x3e, 0x0a, 0x0d, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x15, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x5b, 0x5a, 0x44, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2d, 0x6f, 0x72, 0x67, 0x2f,
	0x64, 0x75, 0x6f, 0x2d, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x64, 0x75, 0x6f,
	0x2d, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x67, 0x6f, 0x70, 0x62, 0xea, 0x02,
	0x12, 0x44, 0x75, 0x6f, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_contract_contract_proto_rawDescOnce sync.Once
	file_contract_contract_proto_rawDescData = file_contract_contract_proto_rawDesc
)

func file_contract_contract_proto_rawDescGZIP() []byte {
	file_contract_contract_proto_rawDescOnce.Do(func() {
		file_contract_contract_proto_rawDescData = protoimpl.X.CompressGZIP(file_contract_contract_proto_rawDescData)
	})
	return file_contract_contract_proto_rawDescData
}

var file_contract_contract_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_contract_contract_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_contract_contract_proto_goTypes = []any{
	(ContextElementType)(0),       // 0: ContextElementType
	(*ClientEvent)(nil),           // 1: ClientEvent
	(*StartWorkflowRequest)(nil),  // 2: StartWorkflowRequest
	(*ActionResponse)(nil),        // 3: ActionResponse
	(*Action)(nil),                // 4: Action
	(*RunCommandAction)(nil),      // 5: RunCommandAction
	(*ReadFile)(nil),              // 6: ReadFile
	(*WriteFile)(nil),             // 7: WriteFile
	(*EditFile)(nil),              // 8: EditFile
	(*RunHTTPRequest)(nil),        // 9: RunHTTPRequest
	(*RunGitCommand)(nil),         // 10: RunGitCommand
	(*GenerateTokenRequest)(nil),  // 11: GenerateTokenRequest
	(*GenerateTokenResponse)(nil), // 12: GenerateTokenResponse
	(*ContextElement)(nil),        // 13: ContextElement
	(*NewCheckpoint)(nil),         // 14: NewCheckpoint
}
var file_contract_contract_proto_depIdxs = []int32{
	2,  // 0: ClientEvent.startRequest:type_name -> StartWorkflowRequest
	3,  // 1: ClientEvent.actionResponse:type_name -> ActionResponse
	13, // 2: StartWorkflowRequest.context:type_name -> ContextElement
	5,  // 3: Action.runCommand:type_name -> RunCommandAction
	9,  // 4: Action.runHTTPRequest:type_name -> RunHTTPRequest
	6,  // 5: Action.runReadFile:type_name -> ReadFile
	7,  // 6: Action.runWriteFile:type_name -> WriteFile
	10, // 7: Action.runGitCommand:type_name -> RunGitCommand
	8,  // 8: Action.runEditFile:type_name -> EditFile
	14, // 9: Action.newCheckpoint:type_name -> NewCheckpoint
	0,  // 10: ContextElement.type:type_name -> ContextElementType
	1,  // 11: DuoWorkflow.ExecuteWorkflow:input_type -> ClientEvent
	11, // 12: DuoWorkflow.GenerateToken:input_type -> GenerateTokenRequest
	4,  // 13: DuoWorkflow.ExecuteWorkflow:output_type -> Action
	12, // 14: DuoWorkflow.GenerateToken:output_type -> GenerateTokenResponse
	13, // [13:15] is the sub-list for method output_type
	11, // [11:13] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_contract_contract_proto_init() }
func file_contract_contract_proto_init() {
	if File_contract_contract_proto != nil {
		return
	}
	file_contract_contract_proto_msgTypes[0].OneofWrappers = []any{
		(*ClientEvent_StartRequest)(nil),
		(*ClientEvent_ActionResponse)(nil),
	}
	file_contract_contract_proto_msgTypes[3].OneofWrappers = []any{
		(*Action_RunCommand)(nil),
		(*Action_RunHTTPRequest)(nil),
		(*Action_RunReadFile)(nil),
		(*Action_RunWriteFile)(nil),
		(*Action_RunGitCommand)(nil),
		(*Action_RunEditFile)(nil),
		(*Action_NewCheckpoint)(nil),
	}
	file_contract_contract_proto_msgTypes[8].OneofWrappers = []any{}
	file_contract_contract_proto_msgTypes[9].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_contract_contract_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_contract_contract_proto_goTypes,
		DependencyIndexes: file_contract_contract_proto_depIdxs,
		EnumInfos:         file_contract_contract_proto_enumTypes,
		MessageInfos:      file_contract_contract_proto_msgTypes,
	}.Build()
	File_contract_contract_proto = out.File
	file_contract_contract_proto_rawDesc = nil
	file_contract_contract_proto_goTypes = nil
	file_contract_contract_proto_depIdxs = nil
}
