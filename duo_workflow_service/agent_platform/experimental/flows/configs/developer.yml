version: "experimental"
environment: remote

components:
  - name: "issue_parser"
    type: DeterministicStepComponent
    tool_name: "get_issue"
    inputs:
      - from: "context:goal"
        as: "url"
    ui_log_events:
      - "on_tool_execution_success"
      - "on_tool_execution_failed"
  - name: "draft_merge_request_creator"
    type: OneOffComponent
    prompt_id: "create_merge_request"
    prompt_version: "^1.0.0"
    tool_name: "create_merge_request"
    inputs:
      - from: "context:goal"
        as: "issue_url"
      - from: "context:project_id"
        as: "project_id"
      - from: "context:issue_parser.tool_responses"
        as: "issue_details"
      - from: "context:workflow_id"
        as: "workflow_id"
      - from: "context:inputs.agent_platform_standard_context.workload_branch"
        as: "source_branch"
      - from: "context:inputs.agent_platform_standard_context.primary_branch"
        as: "target_branch"
    ui_log_events:
      - "on_tool_call_input"
      - "on_tool_execution_success"
      - "on_tool_execution_failed"
  - name: "tool_listing_agent"
    type: AgentComponent
    prompt_id: "list_available_tools"
    prompt_version: "^1.0.0"
    toolset:
      - "list_issues"
      - "get_issue"
      - "list_issue_notes"
      - "get_issue_note"
      - "get_job_logs"
      - "get_merge_request"
      - "get_pipeline_errors"
      - "get_project"
      - "list_all_merge_request_notes"
      - "list_merge_request_diffs"
      - "gitlab_issue_search"
      - "gitlab_merge_request_search"
      - "read_file"
      - "create_file_with_contents"
      - "edit_file"
      - "find_files"
      - "grep"
      - "mkdir"
      - "get_epic"
      - "list_epics"
      - "get_repository_file"
      - "list_dir"
      - "list_epic_notes"
      - "get_epic_note"
      - "get_commit"
  - name: "planning_agent"
    type: AgentComponent
    prompt_id: "developer_planner"
    prompt_version: "^1.0.0"
    inputs:
      - from: "context:project_id"
        as: "project_id"
      - from: "context:project_http_url_to_repo"
        as: "repository_url"
      - from: "context:issue_parser.tool_responses"
        as: "issue_details"
      - from: "context:tool_listing_agent.final_answer"
        as: "coding_agent_tools"
    toolset:
      - "list_issues"
      - "get_issue"
      - "list_issue_notes"
      - "get_issue_note"
      - "get_job_logs"
      - "get_merge_request"
      - "get_project"
      - "get_pipeline_errors"
      - "list_all_merge_request_notes"
      - "list_merge_request_diffs"
      - "gitlab_issue_search"
      - "gitlab_merge_request_search"
      - "read_file"
      - "find_files"
      - "list_dir"
      - "grep"
      - "get_epic"
      - "list_epics"
      - "get_repository_file"
      - "list_epic_notes"
      - "get_epic_note"
      - "get_commit"
      - "list_commits"
      - "get_commit_comments"
      - "get_commit_diff"
      - "get_work_item"
      - "list_work_items"
      - "get_work_item_notes"
    ui_log_events:
      - "on_tool_execution_success"
      - "on_tool_execution_failed"
      - "on_agent_final_answer"
  - name: "programming_agent"
    type: AgentComponent
    prompt_id: "programming_agent"
    prompt_version: "^1.0.0"
    inputs:
      - from: "context:project_id"
        as: "project_id"
      - from: "context:project_http_url_to_repo"
        as: "repository_url"
      - from: "context:planning_agent.final_answer"
        as: "planner_handover"
      - from: "context:inputs.os_information"
        as: "os_information"
    toolset:
      - "list_issues"
      - "get_issue"
      - "list_issue_notes"
      - "get_issue_note"
      - "get_job_logs"
      - "get_merge_request"
      - "get_pipeline_errors"
      - "get_project"
      - "list_all_merge_request_notes"
      - "list_merge_request_diffs"
      - "gitlab_issue_search"
      - "gitlab_merge_request_search"
      - "read_file"
      - "create_file_with_contents"
      - "edit_file"
      - "find_files"
      - "grep"
      - "mkdir"
      - "get_epic"
      - "list_epics"
      - "get_repository_file"
      - "list_dir"
      - "list_epic_notes"
      - "get_epic_note"
      - "get_commit"
    ui_log_events:
      - "on_tool_execution_success"
      - "on_tool_execution_failed"
      - "on_agent_final_answer"
  - name: "git_actions"
    type: OneOffComponent
    prompt_id: "push_to_remote"
    prompt_version: "^1.0.0"
    inputs:
      - from: "context:project_http_url_to_repo"
        as: "repository_url"
      - from: "context:programming_agent.final_answer"
        as: "programming_agent_handover"
      - from: "context:draft_merge_request_creator.tool_responses"
        as: "merge_request_details"
      - from: "context:inputs.agent_platform_standard_context.session_owner_id"
        as: "reviewer_id"
      - from: "context:goal"
        as: "issue_url"
    toolset:
      - "run_git_command"
      - "update_merge_request"
    ui_log_events:
      - "on_tool_execution_success"
      - "on_tool_execution_failed"

routers:
  - from: "issue_parser"
    to: "draft_merge_request_creator"
  - from: "draft_merge_request_creator"
    to: "tool_listing_agent"
  - from: "tool_listing_agent"
    to: "planning_agent"
  - from: "planning_agent"
    to: "programming_agent"
  - from: "programming_agent"
    to: "git_actions"
  - from: "git_actions"
    to: "end"

flow:
  entry_point: "issue_parser"
  inputs:
    - category: agent_platform_standard_context
      input_schema:
        workload_branch:
          type: string
          description: The workload branch for the GitLab Merge Request
        primary_branch:
          type: string
          description: Merge Request target branch
        session_owner_id:
          type: string
          description: Human user's ID that initiated the flow
